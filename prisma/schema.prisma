generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Restaurant {
  id         String      @id @default(cuid())
  name       String
  categories String?
  employees  User[]
  Inventory  Inventory[]
  Menu       Menu[]
  Order      Order[]
}

model User {
  id                 String     @id
  name               String?
  email              String     @unique
  password           String
  role               Role
  restaurantId       String
  address            String?
  aadharNumber       String?
  panNumber          String?
  phone              String?    @unique
  photo              String?
  dob                String?
  doj                String?
  salary             Float?
  resetPasswordToken String?    @unique
  Restaurant         Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
}

model Inventory {
  id               String     @id
  name             String
  quantity         Float
  unit             String
  pricePerUnit     Float
  photo            String?
  dateOfLastUpdate String?
  restaurantId     String
  Restaurant       Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
}

model Menu {
  id           String       @id
  name         String
  price        Float
  calories     Float
  type         String
  restaurantId String
  Restaurant   Restaurant   @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  Ingredients  Ingredient[]
}

model Ingredient {
  id           String  @id
  name         String
  quantity     Float
  unit         String
  pricePerUnit Float
  photo        String?
  menuId       String?
  Menu         Menu?   @relation(fields: [menuId], references: [id], onDelete: Cascade)
}

model Order {
  id            String      @id
  tableNo       String
  status        OrderStatus
  items         String      @db.LongText
  totalPrice    Float
  totalQuantity Float
  totalCalories Float
  restaurantId  String
  Restaurant    Restaurant  @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
}

enum Role {
  OWNER
  MANAGER
  WAITER
  CHEF
}

enum OrderStatus {
  PENDING
  ACCEPTED
  PROCESSING
  CANCELLED
  COMPLETED
}
